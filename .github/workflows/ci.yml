name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14, 15]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install
        run: npx lerna bootstrap --hoist --ci

      - name: Lint
        run: |
          npm run lint
          npm run format:check

      - name: Test
        run: npm run test
        env:
          CI: true

      - name: Build
        run: npm run build
        env:
          CI: true

      - name: Report coverage
        if: startsWith(matrix.node-version, '14')
        uses: codecov/codecov-action@v1

      - name: Generate docs
        if: success() && startsWith(matrix.node-version, '14') && github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npm run docs

      - name: Deploy docs
        if: success() && startsWith(matrix.node-version, '14') && github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs

      - name: Publish release
        if: success() && startsWith(matrix.node-version, '14') && github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git config --global user.email "sousa.dfs@gmail.com"
          git config --global user.name "Daniel Sousa"
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
          npx lerna publish --no-verify-access --yes
        env:
          CI: true
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
